plugins {
    id 'com.android.library'
    id 'kotlin-multiplatform'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.jetbrains.dokka'
    id 'jacoco'
}

jacoco {
    toolVersion = jacoco_version
}

android {
    compileSdk 34
    defaultConfig {
        namespace = "$group"
        minSdkVersion 15
        targetSdk 34
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']       //This line
            }
        }
    }
}

configurations.configureEach {
    resolutionStrategy {
        eachDependency {
            if ("org.jacoco" == requested.group) {
                useVersion("0.8.7")
            }
        }
    }
}

kotlin {
    jvmToolchain(17)
    androidTarget {
        publishLibraryVariantsGroupedByFlavor = true
    }
    targets {
        android {
            mavenPublication {
                artifactId = 'arbor-android'
            }
        }
    }

    sourceSets {
        androidMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
                implementation project(':arbor')
            }
        }
        androidTest {
            dependencies {
                implementation project(':arbor')
                implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
                implementation "org.mockito:mockito-core:3.5.15"
            }
        }
    }
}

//task jacocoTestReportAndroid(type: JacocoReport) {
//    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
//    def debugTree = fileTree(dir: "$buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
//
//    classDirectories.from(files(debugTree))
//    sourceDirectories.from(files("src/androidMain/kotlin"))
//    executionData.from(fileTree(dir: "$buildDir/jacoco", include: "*.exec"))
//
//    reports {
//        xml.required = true
//        html.required = true
//    }
//}
//build.dependsOn jacocoTestReportAndroid

//detekt {
//    buildUponDefaultConfig = true
//    input = files("src/androidMain/kotlin")
//    config = project(':arbor').files("detekt.yml")
//}

//task dokkaJavadocAndroidJar(type: Jar, dependsOn: dokkaJavadoc) {
//    setArchiveClassifier("javadoc")
//    from "${layout.buildDirectory.get().asFile}/javadoc/android"
//}
//
//task androidSourcesJar(type: Jar) {
//    setArchiveClassifier('sources')
//    from kotlin.sourceSets.androidMain.kotlin.srcDirs
//}
//
//build.dependsOn("dokkaJavadocAndroidJar")
//build.dependsOn("androidSourcesJar")

//afterEvaluate {
//    check.dependsOn('detekt')
//}
