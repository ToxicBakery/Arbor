[{"name":"D","description":"com.toxicbakery.logging.LogLevel.D","location":"arbor/com.toxicbakery.logging/-log-level/-d/index.html","searchKeys":["D","D","com.toxicbakery.logging.LogLevel.D"]},{"name":"E","description":"com.toxicbakery.logging.LogLevel.E","location":"arbor/com.toxicbakery.logging/-log-level/-e/index.html","searchKeys":["E","E","com.toxicbakery.logging.LogLevel.E"]},{"name":"I","description":"com.toxicbakery.logging.LogLevel.I","location":"arbor/com.toxicbakery.logging/-log-level/-i/index.html","searchKeys":["I","I","com.toxicbakery.logging.LogLevel.I"]},{"name":"V","description":"com.toxicbakery.logging.LogLevel.V","location":"arbor/com.toxicbakery.logging/-log-level/-v/index.html","searchKeys":["V","V","com.toxicbakery.logging.LogLevel.V"]},{"name":"W","description":"com.toxicbakery.logging.LogLevel.W","location":"arbor/com.toxicbakery.logging/-log-level/-w/index.html","searchKeys":["W","W","com.toxicbakery.logging.LogLevel.W"]},{"name":"WTF","description":"com.toxicbakery.logging.LogLevel.WTF","location":"arbor/com.toxicbakery.logging/-log-level/-w-t-f/index.html","searchKeys":["WTF","WTF","com.toxicbakery.logging.LogLevel.WTF"]},{"name":"abstract fun log(level: Int, tag: String = \"\", msg: String, throwable: Throwable? = null, args: Array<out Any?>? = null)","description":"com.toxicbakery.logging.ISeedling.log","location":"arbor/com.toxicbakery.logging/-i-seedling/log.html","searchKeys":["log","abstract fun log(level: Int, tag: String = \"\", msg: String, throwable: Throwable? = null, args: Array<out Any?>? = null)","com.toxicbakery.logging.ISeedling.log"]},{"name":"abstract val tag: String","description":"com.toxicbakery.logging.ISeedling.tag","location":"arbor/com.toxicbakery.logging/-i-seedling/tag.html","searchKeys":["tag","abstract val tag: String","com.toxicbakery.logging.ISeedling.tag"]},{"name":"class Seedling : ISeedling","description":"com.toxicbakery.logging.Seedling","location":"arbor/com.toxicbakery.logging/[js]-seedling/index.html","searchKeys":["Seedling","class Seedling : ISeedling","com.toxicbakery.logging.Seedling"]},{"name":"class Seedling constructor(printStreamErr: PrintStream = System.err, printStreamOut: PrintStream = System.out, callStackIndex: Int = CALL_STACK_INDEX) : ISeedling","description":"com.toxicbakery.logging.Seedling","location":"arbor/com.toxicbakery.logging/[jvm]-seedling/index.html","searchKeys":["Seedling","class Seedling constructor(printStreamErr: PrintStream = System.err, printStreamOut: PrintStream = System.out, callStackIndex: Int = CALL_STACK_INDEX) : ISeedling","com.toxicbakery.logging.Seedling"]},{"name":"const val DEBUG: Int = 1","description":"com.toxicbakery.logging.Arbor.DEBUG","location":"arbor/com.toxicbakery.logging/-arbor/-d-e-b-u-g.html","searchKeys":["DEBUG","const val DEBUG: Int = 1","com.toxicbakery.logging.Arbor.DEBUG"]},{"name":"const val ERROR: Int = 5","description":"com.toxicbakery.logging.Arbor.ERROR","location":"arbor/com.toxicbakery.logging/-arbor/-e-r-r-o-r.html","searchKeys":["ERROR","const val ERROR: Int = 5","com.toxicbakery.logging.Arbor.ERROR"]},{"name":"const val INFO: Int = 3","description":"com.toxicbakery.logging.Arbor.INFO","location":"arbor/com.toxicbakery.logging/-arbor/-i-n-f-o.html","searchKeys":["INFO","const val INFO: Int = 3","com.toxicbakery.logging.Arbor.INFO"]},{"name":"const val VERBOSE: Int = 2","description":"com.toxicbakery.logging.Arbor.VERBOSE","location":"arbor/com.toxicbakery.logging/-arbor/-v-e-r-b-o-s-e.html","searchKeys":["VERBOSE","const val VERBOSE: Int = 2","com.toxicbakery.logging.Arbor.VERBOSE"]},{"name":"const val WARNING: Int = 4","description":"com.toxicbakery.logging.Arbor.WARNING","location":"arbor/com.toxicbakery.logging/-arbor/-w-a-r-n-i-n-g.html","searchKeys":["WARNING","const val WARNING: Int = 4","com.toxicbakery.logging.Arbor.WARNING"]},{"name":"const val WTF: Int = 6","description":"com.toxicbakery.logging.Arbor.WTF","location":"arbor/com.toxicbakery.logging/-arbor/-w-t-f.html","searchKeys":["WTF","const val WTF: Int = 6","com.toxicbakery.logging.Arbor.WTF"]},{"name":"constructor()","description":"com.toxicbakery.logging.Seedling.Seedling","location":"arbor/com.toxicbakery.logging/[js]-seedling/-seedling.html","searchKeys":["Seedling","constructor()","com.toxicbakery.logging.Seedling.Seedling"]},{"name":"constructor(msg: String)","description":"com.toxicbakery.logging.LoggingException.LoggingException","location":"arbor/com.toxicbakery.logging/-logging-exception/-logging-exception.html","searchKeys":["LoggingException","constructor(msg: String)","com.toxicbakery.logging.LoggingException.LoggingException"]},{"name":"constructor(printStreamErr: PrintStream = System.err, printStreamOut: PrintStream = System.out, callStackIndex: Int = CALL_STACK_INDEX)","description":"com.toxicbakery.logging.Seedling.Seedling","location":"arbor/com.toxicbakery.logging/[jvm]-seedling/-seedling.html","searchKeys":["Seedling","constructor(printStreamErr: PrintStream = System.err, printStreamOut: PrintStream = System.out, callStackIndex: Int = CALL_STACK_INDEX)","com.toxicbakery.logging.Seedling.Seedling"]},{"name":"data class Branch","description":"com.toxicbakery.logging.Branch","location":"arbor/com.toxicbakery.logging/-branch/index.html","searchKeys":["Branch","data class Branch","com.toxicbakery.logging.Branch"]},{"name":"data class LoggingException(msg: String) : Exception","description":"com.toxicbakery.logging.LoggingException","location":"arbor/com.toxicbakery.logging/-logging-exception/index.html","searchKeys":["LoggingException","data class LoggingException(msg: String) : Exception","com.toxicbakery.logging.LoggingException"]},{"name":"enum LogLevel : Enum<LogLevel> ","description":"com.toxicbakery.logging.LogLevel","location":"arbor/com.toxicbakery.logging/-log-level/index.html","searchKeys":["LogLevel","enum LogLevel : Enum<LogLevel> ","com.toxicbakery.logging.LogLevel"]},{"name":"fun Branch.d(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.d","location":"arbor/com.toxicbakery.logging/d.html","searchKeys":["d","fun Branch.d(msg: String, vararg args: Any?)","com.toxicbakery.logging.d"]},{"name":"fun Branch.e(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.e","location":"arbor/com.toxicbakery.logging/e.html","searchKeys":["e","fun Branch.e(msg: String, vararg args: Any?)","com.toxicbakery.logging.e"]},{"name":"fun Branch.i(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.i","location":"arbor/com.toxicbakery.logging/i.html","searchKeys":["i","fun Branch.i(msg: String, vararg args: Any?)","com.toxicbakery.logging.i"]},{"name":"fun Branch.v(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.v","location":"arbor/com.toxicbakery.logging/v.html","searchKeys":["v","fun Branch.v(msg: String, vararg args: Any?)","com.toxicbakery.logging.v"]},{"name":"fun Branch.w(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.w","location":"arbor/com.toxicbakery.logging/w.html","searchKeys":["w","fun Branch.w(msg: String, vararg args: Any?)","com.toxicbakery.logging.w"]},{"name":"fun Branch.wtf(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.wtf","location":"arbor/com.toxicbakery.logging/wtf.html","searchKeys":["wtf","fun Branch.wtf(msg: String, vararg args: Any?)","com.toxicbakery.logging.wtf"]},{"name":"fun Throwable.prettyPrint(): String","description":"com.toxicbakery.logging.Seedling.Companion.prettyPrint","location":"arbor/com.toxicbakery.logging/[jvm]-seedling/-companion/pretty-print.html","searchKeys":["prettyPrint","fun Throwable.prettyPrint(): String","com.toxicbakery.logging.Seedling.Companion.prettyPrint"]},{"name":"fun arbor(logLevel: LogLevel = LogLevel.D, tag: Branch = defaultBranch, message: () -> String)","description":"com.toxicbakery.logging.arbor","location":"arbor/com.toxicbakery.logging/arbor.html","searchKeys":["arbor","fun arbor(logLevel: LogLevel = LogLevel.D, tag: Branch = defaultBranch, message: () -> String)","com.toxicbakery.logging.arbor"]},{"name":"fun d(msg: () -> String)","description":"com.toxicbakery.logging.Arbor.d","location":"arbor/com.toxicbakery.logging/-arbor/d.html","searchKeys":["d","fun d(msg: () -> String)","com.toxicbakery.logging.Arbor.d"]},{"name":"fun d(msg: () -> String)","description":"com.toxicbakery.logging.Branch.d","location":"arbor/com.toxicbakery.logging/-branch/d.html","searchKeys":["d","fun d(msg: () -> String)","com.toxicbakery.logging.Branch.d"]},{"name":"fun d(msg: String)","description":"com.toxicbakery.logging.Arbor.d","location":"arbor/com.toxicbakery.logging/-arbor/d.html","searchKeys":["d","fun d(msg: String)","com.toxicbakery.logging.Arbor.d"]},{"name":"fun d(msg: String)","description":"com.toxicbakery.logging.Branch.d","location":"arbor/com.toxicbakery.logging/-branch/d.html","searchKeys":["d","fun d(msg: String)","com.toxicbakery.logging.Branch.d"]},{"name":"fun d(msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.d","location":"arbor/com.toxicbakery.logging/-branch/d.html","searchKeys":["d","fun d(msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.d"]},{"name":"fun d(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.d","location":"arbor/com.toxicbakery.logging/-arbor/d.html","searchKeys":["d","fun d(msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.d"]},{"name":"fun d(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Arbor.d","location":"arbor/com.toxicbakery.logging/-arbor/d.html","searchKeys":["d","fun d(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Arbor.d"]},{"name":"fun d(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Branch.d","location":"arbor/com.toxicbakery.logging/-branch/d.html","searchKeys":["d","fun d(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Branch.d"]},{"name":"fun d(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Arbor.d","location":"arbor/com.toxicbakery.logging/-arbor/d.html","searchKeys":["d","fun d(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Arbor.d"]},{"name":"fun d(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Branch.d","location":"arbor/com.toxicbakery.logging/-branch/d.html","searchKeys":["d","fun d(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Branch.d"]},{"name":"fun d(throwable: Throwable, msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.d","location":"arbor/com.toxicbakery.logging/-branch/d.html","searchKeys":["d","fun d(throwable: Throwable, msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.d"]},{"name":"fun d(throwable: Throwable, msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.d","location":"arbor/com.toxicbakery.logging/-arbor/d.html","searchKeys":["d","fun d(throwable: Throwable, msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.d"]},{"name":"fun e(msg: () -> String)","description":"com.toxicbakery.logging.Arbor.e","location":"arbor/com.toxicbakery.logging/-arbor/e.html","searchKeys":["e","fun e(msg: () -> String)","com.toxicbakery.logging.Arbor.e"]},{"name":"fun e(msg: () -> String)","description":"com.toxicbakery.logging.Branch.e","location":"arbor/com.toxicbakery.logging/-branch/e.html","searchKeys":["e","fun e(msg: () -> String)","com.toxicbakery.logging.Branch.e"]},{"name":"fun e(msg: String)","description":"com.toxicbakery.logging.Arbor.e","location":"arbor/com.toxicbakery.logging/-arbor/e.html","searchKeys":["e","fun e(msg: String)","com.toxicbakery.logging.Arbor.e"]},{"name":"fun e(msg: String)","description":"com.toxicbakery.logging.Branch.e","location":"arbor/com.toxicbakery.logging/-branch/e.html","searchKeys":["e","fun e(msg: String)","com.toxicbakery.logging.Branch.e"]},{"name":"fun e(msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.e","location":"arbor/com.toxicbakery.logging/-branch/e.html","searchKeys":["e","fun e(msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.e"]},{"name":"fun e(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.e","location":"arbor/com.toxicbakery.logging/-arbor/e.html","searchKeys":["e","fun e(msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.e"]},{"name":"fun e(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Arbor.e","location":"arbor/com.toxicbakery.logging/-arbor/e.html","searchKeys":["e","fun e(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Arbor.e"]},{"name":"fun e(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Branch.e","location":"arbor/com.toxicbakery.logging/-branch/e.html","searchKeys":["e","fun e(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Branch.e"]},{"name":"fun e(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Arbor.e","location":"arbor/com.toxicbakery.logging/-arbor/e.html","searchKeys":["e","fun e(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Arbor.e"]},{"name":"fun e(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Branch.e","location":"arbor/com.toxicbakery.logging/-branch/e.html","searchKeys":["e","fun e(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Branch.e"]},{"name":"fun e(throwable: Throwable, msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.e","location":"arbor/com.toxicbakery.logging/-branch/e.html","searchKeys":["e","fun e(throwable: Throwable, msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.e"]},{"name":"fun e(throwable: Throwable, msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.e","location":"arbor/com.toxicbakery.logging/-arbor/e.html","searchKeys":["e","fun e(throwable: Throwable, msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.e"]},{"name":"fun harvest(seedling: ISeedling): Boolean","description":"com.toxicbakery.logging.Arbor.harvest","location":"arbor/com.toxicbakery.logging/-arbor/harvest.html","searchKeys":["harvest","fun harvest(seedling: ISeedling): Boolean","com.toxicbakery.logging.Arbor.harvest"]},{"name":"fun i(msg: () -> String)","description":"com.toxicbakery.logging.Arbor.i","location":"arbor/com.toxicbakery.logging/-arbor/i.html","searchKeys":["i","fun i(msg: () -> String)","com.toxicbakery.logging.Arbor.i"]},{"name":"fun i(msg: () -> String)","description":"com.toxicbakery.logging.Branch.i","location":"arbor/com.toxicbakery.logging/-branch/i.html","searchKeys":["i","fun i(msg: () -> String)","com.toxicbakery.logging.Branch.i"]},{"name":"fun i(msg: String)","description":"com.toxicbakery.logging.Arbor.i","location":"arbor/com.toxicbakery.logging/-arbor/i.html","searchKeys":["i","fun i(msg: String)","com.toxicbakery.logging.Arbor.i"]},{"name":"fun i(msg: String)","description":"com.toxicbakery.logging.Branch.i","location":"arbor/com.toxicbakery.logging/-branch/i.html","searchKeys":["i","fun i(msg: String)","com.toxicbakery.logging.Branch.i"]},{"name":"fun i(msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.i","location":"arbor/com.toxicbakery.logging/-branch/i.html","searchKeys":["i","fun i(msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.i"]},{"name":"fun i(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.i","location":"arbor/com.toxicbakery.logging/-arbor/i.html","searchKeys":["i","fun i(msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.i"]},{"name":"fun i(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Arbor.i","location":"arbor/com.toxicbakery.logging/-arbor/i.html","searchKeys":["i","fun i(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Arbor.i"]},{"name":"fun i(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Branch.i","location":"arbor/com.toxicbakery.logging/-branch/i.html","searchKeys":["i","fun i(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Branch.i"]},{"name":"fun i(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Arbor.i","location":"arbor/com.toxicbakery.logging/-arbor/i.html","searchKeys":["i","fun i(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Arbor.i"]},{"name":"fun i(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Branch.i","location":"arbor/com.toxicbakery.logging/-branch/i.html","searchKeys":["i","fun i(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Branch.i"]},{"name":"fun i(throwable: Throwable, msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.i","location":"arbor/com.toxicbakery.logging/-branch/i.html","searchKeys":["i","fun i(throwable: Throwable, msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.i"]},{"name":"fun i(throwable: Throwable, msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.i","location":"arbor/com.toxicbakery.logging/-arbor/i.html","searchKeys":["i","fun i(throwable: Throwable, msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.i"]},{"name":"fun reset()","description":"com.toxicbakery.logging.Arbor.reset","location":"arbor/com.toxicbakery.logging/-arbor/reset.html","searchKeys":["reset","fun reset()","com.toxicbakery.logging.Arbor.reset"]},{"name":"fun sow(seedling: ISeedling): Boolean","description":"com.toxicbakery.logging.Arbor.sow","location":"arbor/com.toxicbakery.logging/-arbor/sow.html","searchKeys":["sow","fun sow(seedling: ISeedling): Boolean","com.toxicbakery.logging.Arbor.sow"]},{"name":"fun tag(tag: String): Branch","description":"com.toxicbakery.logging.Arbor.tag","location":"arbor/com.toxicbakery.logging/-arbor/tag.html","searchKeys":["tag","fun tag(tag: String): Branch","com.toxicbakery.logging.Arbor.tag"]},{"name":"fun v(msg: () -> String)","description":"com.toxicbakery.logging.Arbor.v","location":"arbor/com.toxicbakery.logging/-arbor/v.html","searchKeys":["v","fun v(msg: () -> String)","com.toxicbakery.logging.Arbor.v"]},{"name":"fun v(msg: () -> String)","description":"com.toxicbakery.logging.Branch.v","location":"arbor/com.toxicbakery.logging/-branch/v.html","searchKeys":["v","fun v(msg: () -> String)","com.toxicbakery.logging.Branch.v"]},{"name":"fun v(msg: String)","description":"com.toxicbakery.logging.Arbor.v","location":"arbor/com.toxicbakery.logging/-arbor/v.html","searchKeys":["v","fun v(msg: String)","com.toxicbakery.logging.Arbor.v"]},{"name":"fun v(msg: String)","description":"com.toxicbakery.logging.Branch.v","location":"arbor/com.toxicbakery.logging/-branch/v.html","searchKeys":["v","fun v(msg: String)","com.toxicbakery.logging.Branch.v"]},{"name":"fun v(msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.v","location":"arbor/com.toxicbakery.logging/-branch/v.html","searchKeys":["v","fun v(msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.v"]},{"name":"fun v(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.v","location":"arbor/com.toxicbakery.logging/-arbor/v.html","searchKeys":["v","fun v(msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.v"]},{"name":"fun v(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Arbor.v","location":"arbor/com.toxicbakery.logging/-arbor/v.html","searchKeys":["v","fun v(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Arbor.v"]},{"name":"fun v(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Branch.v","location":"arbor/com.toxicbakery.logging/-branch/v.html","searchKeys":["v","fun v(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Branch.v"]},{"name":"fun v(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Arbor.v","location":"arbor/com.toxicbakery.logging/-arbor/v.html","searchKeys":["v","fun v(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Arbor.v"]},{"name":"fun v(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Branch.v","location":"arbor/com.toxicbakery.logging/-branch/v.html","searchKeys":["v","fun v(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Branch.v"]},{"name":"fun v(throwable: Throwable, msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.v","location":"arbor/com.toxicbakery.logging/-branch/v.html","searchKeys":["v","fun v(throwable: Throwable, msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.v"]},{"name":"fun v(throwable: Throwable, msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.v","location":"arbor/com.toxicbakery.logging/-arbor/v.html","searchKeys":["v","fun v(throwable: Throwable, msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.v"]},{"name":"fun valueOf(value: String): LogLevel","description":"com.toxicbakery.logging.LogLevel.valueOf","location":"arbor/com.toxicbakery.logging/-log-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LogLevel","com.toxicbakery.logging.LogLevel.valueOf"]},{"name":"fun values(): Array<LogLevel>","description":"com.toxicbakery.logging.LogLevel.values","location":"arbor/com.toxicbakery.logging/-log-level/values.html","searchKeys":["values","fun values(): Array<LogLevel>","com.toxicbakery.logging.LogLevel.values"]},{"name":"fun w(msg: () -> String)","description":"com.toxicbakery.logging.Arbor.w","location":"arbor/com.toxicbakery.logging/-arbor/w.html","searchKeys":["w","fun w(msg: () -> String)","com.toxicbakery.logging.Arbor.w"]},{"name":"fun w(msg: () -> String)","description":"com.toxicbakery.logging.Branch.w","location":"arbor/com.toxicbakery.logging/-branch/w.html","searchKeys":["w","fun w(msg: () -> String)","com.toxicbakery.logging.Branch.w"]},{"name":"fun w(msg: String)","description":"com.toxicbakery.logging.Arbor.w","location":"arbor/com.toxicbakery.logging/-arbor/w.html","searchKeys":["w","fun w(msg: String)","com.toxicbakery.logging.Arbor.w"]},{"name":"fun w(msg: String)","description":"com.toxicbakery.logging.Branch.w","location":"arbor/com.toxicbakery.logging/-branch/w.html","searchKeys":["w","fun w(msg: String)","com.toxicbakery.logging.Branch.w"]},{"name":"fun w(msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.w","location":"arbor/com.toxicbakery.logging/-branch/w.html","searchKeys":["w","fun w(msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.w"]},{"name":"fun w(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.w","location":"arbor/com.toxicbakery.logging/-arbor/w.html","searchKeys":["w","fun w(msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.w"]},{"name":"fun w(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Arbor.w","location":"arbor/com.toxicbakery.logging/-arbor/w.html","searchKeys":["w","fun w(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Arbor.w"]},{"name":"fun w(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Branch.w","location":"arbor/com.toxicbakery.logging/-branch/w.html","searchKeys":["w","fun w(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Branch.w"]},{"name":"fun w(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Arbor.w","location":"arbor/com.toxicbakery.logging/-arbor/w.html","searchKeys":["w","fun w(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Arbor.w"]},{"name":"fun w(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Branch.w","location":"arbor/com.toxicbakery.logging/-branch/w.html","searchKeys":["w","fun w(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Branch.w"]},{"name":"fun w(throwable: Throwable, msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.w","location":"arbor/com.toxicbakery.logging/-branch/w.html","searchKeys":["w","fun w(throwable: Throwable, msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.w"]},{"name":"fun w(throwable: Throwable, msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.w","location":"arbor/com.toxicbakery.logging/-arbor/w.html","searchKeys":["w","fun w(throwable: Throwable, msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.w"]},{"name":"fun wtf(msg: () -> String)","description":"com.toxicbakery.logging.Arbor.wtf","location":"arbor/com.toxicbakery.logging/-arbor/wtf.html","searchKeys":["wtf","fun wtf(msg: () -> String)","com.toxicbakery.logging.Arbor.wtf"]},{"name":"fun wtf(msg: () -> String)","description":"com.toxicbakery.logging.Branch.wtf","location":"arbor/com.toxicbakery.logging/-branch/wtf.html","searchKeys":["wtf","fun wtf(msg: () -> String)","com.toxicbakery.logging.Branch.wtf"]},{"name":"fun wtf(msg: String)","description":"com.toxicbakery.logging.Arbor.wtf","location":"arbor/com.toxicbakery.logging/-arbor/wtf.html","searchKeys":["wtf","fun wtf(msg: String)","com.toxicbakery.logging.Arbor.wtf"]},{"name":"fun wtf(msg: String)","description":"com.toxicbakery.logging.Branch.wtf","location":"arbor/com.toxicbakery.logging/-branch/wtf.html","searchKeys":["wtf","fun wtf(msg: String)","com.toxicbakery.logging.Branch.wtf"]},{"name":"fun wtf(msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.wtf","location":"arbor/com.toxicbakery.logging/-branch/wtf.html","searchKeys":["wtf","fun wtf(msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.wtf"]},{"name":"fun wtf(msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.wtf","location":"arbor/com.toxicbakery.logging/-arbor/wtf.html","searchKeys":["wtf","fun wtf(msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.wtf"]},{"name":"fun wtf(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Arbor.wtf","location":"arbor/com.toxicbakery.logging/-arbor/wtf.html","searchKeys":["wtf","fun wtf(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Arbor.wtf"]},{"name":"fun wtf(throwable: Throwable, msg: () -> String)","description":"com.toxicbakery.logging.Branch.wtf","location":"arbor/com.toxicbakery.logging/-branch/wtf.html","searchKeys":["wtf","fun wtf(throwable: Throwable, msg: () -> String)","com.toxicbakery.logging.Branch.wtf"]},{"name":"fun wtf(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Arbor.wtf","location":"arbor/com.toxicbakery.logging/-arbor/wtf.html","searchKeys":["wtf","fun wtf(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Arbor.wtf"]},{"name":"fun wtf(throwable: Throwable, msg: String = \"\")","description":"com.toxicbakery.logging.Branch.wtf","location":"arbor/com.toxicbakery.logging/-branch/wtf.html","searchKeys":["wtf","fun wtf(throwable: Throwable, msg: String = \"\")","com.toxicbakery.logging.Branch.wtf"]},{"name":"fun wtf(throwable: Throwable, msg: String, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Branch.wtf","location":"arbor/com.toxicbakery.logging/-branch/wtf.html","searchKeys":["wtf","fun wtf(throwable: Throwable, msg: String, args: Array<out Any?>?)","com.toxicbakery.logging.Branch.wtf"]},{"name":"fun wtf(throwable: Throwable, msg: String, vararg args: Any?)","description":"com.toxicbakery.logging.Arbor.wtf","location":"arbor/com.toxicbakery.logging/-arbor/wtf.html","searchKeys":["wtf","fun wtf(throwable: Throwable, msg: String, vararg args: Any?)","com.toxicbakery.logging.Arbor.wtf"]},{"name":"interface ISeedling","description":"com.toxicbakery.logging.ISeedling","location":"arbor/com.toxicbakery.logging/-i-seedling/index.html","searchKeys":["ISeedling","interface ISeedling","com.toxicbakery.logging.ISeedling"]},{"name":"object Arbor","description":"com.toxicbakery.logging.Arbor","location":"arbor/com.toxicbakery.logging/-arbor/index.html","searchKeys":["Arbor","object Arbor","com.toxicbakery.logging.Arbor"]},{"name":"object Companion","description":"com.toxicbakery.logging.Seedling.Companion","location":"arbor/com.toxicbakery.logging/[jvm]-seedling/-companion/index.html","searchKeys":["Companion","object Companion","com.toxicbakery.logging.Seedling.Companion"]},{"name":"open fun log(level: Int, tag: String, msg: () -> String, throwable: Throwable? = null)","description":"com.toxicbakery.logging.ISeedling.log","location":"arbor/com.toxicbakery.logging/-i-seedling/log.html","searchKeys":["log","open fun log(level: Int, tag: String, msg: () -> String, throwable: Throwable? = null)","com.toxicbakery.logging.ISeedling.log"]},{"name":"open override fun log(level: Int, tag: String, msg: String, throwable: Throwable?, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Seedling.log","location":"arbor/com.toxicbakery.logging/[js]-seedling/log.html","searchKeys":["log","open override fun log(level: Int, tag: String, msg: String, throwable: Throwable?, args: Array<out Any?>?)","com.toxicbakery.logging.Seedling.log"]},{"name":"open override fun log(level: Int, tag: String, msg: String, throwable: Throwable?, args: Array<out Any?>?)","description":"com.toxicbakery.logging.Seedling.log","location":"arbor/com.toxicbakery.logging/[jvm]-seedling/log.html","searchKeys":["log","open override fun log(level: Int, tag: String, msg: String, throwable: Throwable?, args: Array<out Any?>?)","com.toxicbakery.logging.Seedling.log"]},{"name":"open override val tag: String","description":"com.toxicbakery.logging.Seedling.tag","location":"arbor/com.toxicbakery.logging/[js]-seedling/tag.html","searchKeys":["tag","open override val tag: String","com.toxicbakery.logging.Seedling.tag"]},{"name":"open override val tag: String","description":"com.toxicbakery.logging.Seedling.tag","location":"arbor/com.toxicbakery.logging/[jvm]-seedling/tag.html","searchKeys":["tag","open override val tag: String","com.toxicbakery.logging.Seedling.tag"]},{"name":"val entries: EnumEntries<LogLevel>","description":"com.toxicbakery.logging.LogLevel.entries","location":"arbor/com.toxicbakery.logging/-log-level/entries.html","searchKeys":["entries","val entries: EnumEntries<LogLevel>","com.toxicbakery.logging.LogLevel.entries"]},{"name":"val forest: Set<ISeedling>","description":"com.toxicbakery.logging.Arbor.forest","location":"arbor/com.toxicbakery.logging/-arbor/forest.html","searchKeys":["forest","val forest: Set<ISeedling>","com.toxicbakery.logging.Arbor.forest"]}]